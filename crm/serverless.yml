# "service" is the name of this project. This will also be added to your AWS resource names.
service: serverless

params:
  dev:
    debug: T
  prod:
    debug: F

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 25
  architecture: arm64
  environment:
    debug: ${self:params.${sls:stage}.debug}
    region: ${aws:region}

  httpApi:
    name: ${self:service}-${sls:stage}-httpapi

functions:
  erp:
    handler: erp/handler.main
    name: ${self:service}-${sls:stage}-process-erp-data
    environment:
      erp_bucket_name: !Ref ErpBucket
    events:
      - httpApi: 'GET /erp'
    role: LambdaPermission

  crm:
    handler: crm/handler.main
    name: ${self:service}-${sls:stage}-process-erp-data
    environment:
      erp_bucket_name: !Ref ErpBucket
    events:
      - httpApi: 'GET /erp'
    role: LambdaPermission

resources:
  Resources:
    ErpBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${sls:stage}-erp-data-bucket

    LambdaPermission:
      Type: AWS::IAM::Role
      Properties:
        RoleName: lambdaPermission
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: lambdaCreateLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:TagResource
                  Resource:
                    - !Join [ ":", [ "arn:aws:logs", !Ref AWS::Region, !Ref AWS::AccountId, "log-group", "/aws/lambda/${self:service}-${sls:stage}*", "*"]]
          - PolicyName: lambdaPutLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - !Join [ ":", [ "arn:aws:logs", !Ref AWS::Region, !Ref AWS::AccountId, "log-group", "/aws/lambda/${self:service}-${sls:stage}*", "*", "*" ]]
          - PolicyName: lambdaPermissionWriteS3
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource:
                    - !GetAtt ErpBucket.Arn
                    - !Join [ "/", [ !GetAtt ErpBucket.Arn, "*" ]]  